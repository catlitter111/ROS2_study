<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="four_wheel_robot_base">

    <!-- 属性定义 Properties -->
    <xacro:property name="chassis_length" value="0.6" />
    <xacro:property name="chassis_width" value="0.4" />
    <xacro:property name="chassis_height" value="0.1" />
    <xacro:property name="chassis_mass" value="10.0" />
    
    <xacro:property name="wheel_radius" value="0.08" />
    <xacro:property name="wheel_length" value="0.06" />
    <xacro:property name="wheel_mass" value="1.0" />
    <xacro:property name="wheel_offset_x" value="0.2" />
    <xacro:property name="wheel_offset_y" value="0.23" />
    
    <!-- 万向轮属性 -->
    <xacro:property name="caster_radius" value="0.04" />
    <xacro:property name="caster_mass" value="0.5" />

    <!-- 材料定义 Materials -->
    <material name="chassis_material">
        <color rgba="0.2 0.2 0.8 1.0"/>
    </material>
    
    <material name="wheel_material">
        <color rgba="0.1 0.1 0.1 1.0"/>
    </material>

    <!-- 惯性矩阵计算宏 Inertial Macro -->
    <xacro:macro name="box_inertial" params="mass x y z">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${mass}"/>
            <inertia ixx="${mass*(y*y+z*z)/12}" ixy="0" ixz="0"
                     iyy="${mass*(x*x+z*z)/12}" iyz="0"
                     izz="${mass*(x*x+y*y)/12}"/>
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial" params="mass radius height">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${mass}"/>
            <inertia ixx="${mass*(3*radius*radius+height*height)/12}" ixy="0" ixz="0"
                     iyy="${mass*(3*radius*radius+height*height)/12}" iyz="0"
                     izz="${mass*radius*radius/2}"/>
        </inertial>
    </xacro:macro>

    <!-- 虚拟的base_footprint链接 -->
    <link name="base_footprint">
    </link>

    <!-- 机器人底盘 Base Link -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="chassis_material"/>
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <xacro:box_inertial mass="${chassis_mass}" 
                           x="${chassis_length}" 
                           y="${chassis_width}" 
                           z="${chassis_height}"/>
    </link>

    <!-- base_footprint到base_link的关节 -->
    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0 0 ${wheel_radius + chassis_height/2}" rpy="0 0 0"/>
    </joint>

    <!-- 后轮宏定义（驱动轮） -->
    <xacro:macro name="rear_wheel" params="prefix x_pos y_pos">
        <link name="${prefix}_wheel">
            <visual>
                <origin xyz="0 0 0" rpy="1.5708 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <material name="wheel_material"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="1.5708 0 0"/>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
            </collision>
            <inertial>
                <origin xyz="0 0 0" rpy="1.5708 0 0"/>
                <mass value="${wheel_mass}"/>
                <inertia ixx="0.003" ixy="0" ixz="0" 
                         iyy="0.003" iyz="0" izz="0.005"/>
            </inertial>
        </link>

        <joint name="${prefix}_wheel_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_wheel"/>
            <origin xyz="${x_pos} ${y_pos} ${-chassis_height/2}" rpy="0 0 0"/>
            <axis xyz="0 1 0"/>
            <dynamics damping="0.1" friction="0.1"/>
        </joint>
    </xacro:macro>

    <!-- 万向轮宏定义（前轮） -->
    <xacro:macro name="caster_wheel" params="prefix x_pos y_pos">
        <!-- 使用球形万向轮 -->
        <link name="${prefix}_caster_wheel">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}"/>
                </geometry>
                <material name="wheel_material"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}"/>
                </geometry>
                <surface>
                    <friction>
                        <ode>
                            <mu>0.01</mu>
                            <mu2>0.01</mu2>
                        </ode>
                    </friction>
                </surface>
            </collision>
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <mass value="${caster_mass}"/>
                <inertia ixx="${2*caster_mass*caster_radius*caster_radius/5}" ixy="0" ixz="0"
                         iyy="${2*caster_mass*caster_radius*caster_radius/5}" iyz="0"
                         izz="${2*caster_mass*caster_radius*caster_radius/5}"/>
            </inertial>
        </link>

        <joint name="${prefix}_caster_joint" type="fixed">
            <parent link="base_link"/>
            <child link="${prefix}_caster_wheel"/>
            <!-- 调整高度以匹配后轮接触地面 -->
            <origin xyz="${x_pos} ${y_pos} ${-chassis_height/2 - wheel_radius + caster_radius}" rpy="0 0 0"/>
        </joint>

        <!-- Gazebo配置 -->
        <gazebo reference="${prefix}_caster_wheel">
            <material>Gazebo/Black</material>
            <mu1>0.01</mu1>
            <mu2>0.01</mu2>
            <kp>1000000.0</kp>
            <kd>100.0</kd>
            <minDepth>0.001</minDepth>
            <maxVel>1.0</maxVel>
        </gazebo>
    </xacro:macro>

    <!-- 创建两个后轮（驱动轮） -->
    <xacro:rear_wheel prefix="rear_left" x_pos="${-wheel_offset_x}" y_pos="${wheel_offset_y}"/>
    <xacro:rear_wheel prefix="rear_right" x_pos="${-wheel_offset_x}" y_pos="${-wheel_offset_y}"/>
    
    <!-- 创建两个前轮（万向轮） -->
    <xacro:caster_wheel prefix="front_left" x_pos="${wheel_offset_x}" y_pos="${wheel_offset_y}"/>
    <xacro:caster_wheel prefix="front_right" x_pos="${wheel_offset_x}" y_pos="${-wheel_offset_y}"/>

</robot>