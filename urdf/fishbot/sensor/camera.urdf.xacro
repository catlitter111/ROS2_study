<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="four_wheel_robot_camera">

    <!-- 摄像头属性 Camera Properties -->
    <xacro:property name="camera_length" value="0.08" />
    <xacro:property name="camera_width" value="0.06" />
    <xacro:property name="camera_height" value="0.04" />
    <xacro:property name="camera_mass" value="0.3" />
    <xacro:property name="chassis_height" value="0.1" />
    <xacro:property name="chassis_length" value="0.6" />
    
    <!-- 摄像头材料 Camera Material -->
    <material name="camera_material">
        <color rgba="0.2 0.8 0.2 1.0"/>
    </material>

    <!-- 摄像头宏定义 Camera Macro -->
    <xacro:macro name="camera_sensor" params="parent">
        <link name="camera_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${camera_length} ${camera_width} ${camera_height}"/>
                </geometry>
                <material name="camera_material"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${camera_length} ${camera_width} ${camera_height}"/>
                </geometry>
            </collision>
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <mass value="${camera_mass}"/>
                <inertia ixx="${camera_mass*(camera_width*camera_width+camera_height*camera_height)/12}" ixy="0" ixz="0"
                         iyy="${camera_mass*(camera_length*camera_length+camera_height*camera_height)/12}" iyz="0"
                         izz="${camera_mass*(camera_length*camera_length+camera_width*camera_width)/12}"/>
            </inertial>
        </link>

        <!-- 摄像头关节 Camera Joint - 位于车子前方 -->
        <joint name="camera_joint" type="fixed">
            <parent link="${parent}"/>
            <child link="camera_link"/>
            <!-- 修正：base_link的中心在chassis_height/2的位置，所以相机只需要在此基础上偏移 -->
            <origin xyz="${chassis_length/2 + camera_length/2 + 0.02} 0 ${chassis_height/2 + camera_height/2 + 0.02}" rpy="0 0 0"/>
        </joint>

        <!-- 摄像头光学框架 Camera Optical Frame -->
        <link name="camera_optical_link">
        </link>

        <joint name="camera_optical_joint" type="fixed">
            <parent link="camera_link"/>
            <child link="camera_optical_link"/>
            <origin xyz="0 0 0" rpy="-1.5708 0 -1.5708"/>
        </joint>

        <!-- Gazebo 摄像头插件 -->
        <gazebo reference="camera_link">
            <sensor type="camera" name="camera_sensor">
                <update_rate>30.0</update_rate>
                <camera name="head">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                        <width>800</width>
                        <height>600</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.02</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                    <ros>
                        <namespace>/robot</namespace>
                        <!-- 使用新的remap语法 -->
                        <remapping>~/image_raw:=/robot/camera/image_raw</remapping>
                        <remapping>~/camera_info:=/robot/camera/camera_info</remapping>
                    </ros>
                    <camera_name>camera</camera_name>
                    <frame_name>camera_optical_link</frame_name>
                    <hack_baseline>0.07</hack_baseline>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

</robot>